- labelled_form_for @issue, :html => {:id => 'issue-form', :multipart => true} do |f|
  = error_messages_for 'issue', 'time_entry'
  = render :partial => 'conflict' if @conflict
  .box
    - if @edit_allowed || !@allowed_statuses.empty?
      %fieldset.tabular
        %legend= l(:label_change_properties)
        #all_attributes
          = render :partial => 'form', :locals => {:f => f}

    - if User.current.allowed_to?(:log_time, @project)
      %fieldset.tabular
        %legend= l(:button_log_time)
        - labelled_fields_for :time_entry, @time_entry do |time_entry|
          .splitcontentleft
            %p
              = time_entry.text_field :hours, :size => 6, :label => :label_spent_time
              = l(:field_hours)
          .splitcontentright
            %p= time_entry.select :activity_id, activity_collection_for_select_options
          %p= time_entry.text_field :comments, :size => 60
          - @time_entry.custom_field_values.each do |value|
            %p= custom_field_tag_with_label :time_entry, value

    %fieldset
      %legend= l(:field_notes)
      = text_area_tag 'notes', @notes, :cols => 60, :rows => 10, :class => 'wiki-edit'
      = wikitoolbar_for 'notes'
      = call_hook(:view_issues_edit_notes_bottom, { :issue => @issue, :notes => @notes, :form => f })
      %p
        =l(:label_attachment_plural)
        %br
        = render :partial => 'attachments/form', :locals => {:container => @issue}

  = f.hidden_field :lock_version
  = hidden_field_tag 'last_journal_id', params[:last_journal_id] || @issue.last_journal_id
  = submit_tag l(:button_submit)
  = link_to_remote l(:label_preview), {:url => preview_edit_issue_path(:project_id => @project, :id => @issue), :method => 'post', :update => 'preview', :with => 'Form.serialize("issue-form")', :complete => "Element.scrollTo('preview')"}, :accesskey => accesskey(:preview)

#preview.wiki
